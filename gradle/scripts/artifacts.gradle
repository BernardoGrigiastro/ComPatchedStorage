import groovy.json.*

def commonManifest = {
    if (project.hasProperty('extra_fmlat')) {
        attributes 'FMLAT': project.extra_fmlat
    }
}

jar {
    classifier = project.hasProperty('extra_classifier') ? project.extra_classifier : 'universal'
    manifest commonManifest
}

task devJar(dependsOn: 'classes', type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
    manifest commonManifest
}

task sourceJar(dependsOn: 'classes', type: Jar) {
    from sourceSets.main.allSource
    classifier = 'src'
    manifest commonManifest
}

task jsonFile(dependsOn: 'classes') {
	def map = [version: "${project.modversion}", minecraft: "${project.version_minecraft}", release: "${project.extra_curseforge_releasetype}"]
	String jsonString = new JsonBuilder(map).toPrettyString()
	
	File jsonFile = new File('build/libs/build.json')
	jsonFile.delete()
	jsonFile.getParentFile().mkdirs()
	jsonFile.createNewFile()

	jsonFile << jsonString
	
	return jsonFile
}

artifacts {
    archives devJar
    archives sourceJar
	jsonFile
}

apply plugin: 'maven-publish'

publishing {
    publications {
        mavenJava(MavenPublication) {
			from components.java
			classifier = "universal"
			
			artifact sourceJar {
				
			}
			
			artifact devJar {
				
			}
        }
    }
}
publishing {
    repositories {
        maven {
			if(System.getenv().containsKey("BUILD_NUMBER")) {
				url "/var/lib/jenkins/maven/maven"
			} else {
				url "$buildDir/tempMaven"
			}
        }
    }
}